Index.PACKAGES = {"org.apache.spark.ml.ensemble" : [{"name" : "org.apache.spark.ml.ensemble.Utils", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html", "members_object" : [{"label" : "getFeaturesMetadata", "tail" : "(dataset: Dataset[_], featuresCol: String, indices: Option[Array[Int]]): Metadata", "member" : "org.apache.spark.ml.ensemble.Utils.getFeaturesMetadata", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#getFeaturesMetadata(dataset:org.apache.spark.sql.Dataset[_],featuresCol:String,indices:Option[Array[Int]]):org.apache.spark.sql.types.Metadata", "kind" : "def"}, {"label" : "weightedMedian", "tail" : "(data: Array[T], weights: Array[W])(arg0: ClassTag[T], arg1: Ordering[T], arg2: ClassTag[W], arg3: Numeric[W]): T", "member" : "org.apache.spark.ml.ensemble.Utils.weightedMedian", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#weightedMedian[T,W](data:Array[T],weights:Array[W])(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:Ordering[T],implicitevidence$3:scala.reflect.ClassTag[W],implicitevidence$4:Numeric[W]):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/ensemble\/Utils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.ml.boosting" : [{"name" : "org.apache.spark.ml.boosting.AbsoluteLoss", "case object" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html", "shortDescription" : "", "members_case object" : [{"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.AbsoluteLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.AbsoluteLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/AbsoluteLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "org.apache.spark.ml.boosting.BernoulliLoss", "case object" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html", "shortDescription" : "", "members_case object" : [{"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#hessian(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.BernoulliLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#dim:Int", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/BernoulliLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "org.apache.spark.ml.boosting.ExponentialLoss", "case object" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html", "shortDescription" : "", "members_case object" : [{"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#hessian(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.ExponentialLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#dim:Int", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/ExponentialLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "org.apache.spark.ml.boosting.GBMClassificationLoss", "trait" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html", "kind" : "trait", "members_trait" : [{"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.boosting.GBMClassificationLoss.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "abstract def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "abstract def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "abstract def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#dim:Int", "kind" : "abstract def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/GBMClassificationLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.GBMLoss", "trait" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html", "kind" : "trait", "members_trait" : [{"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "abstract def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "abstract def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#dim:Int", "kind" : "abstract def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.GBMLossAggregator", "shortDescription" : "", "members_class" : [{"label" : "add", "tail" : "(instance: GBMLossInstance): GBMLossAggregator.this.type", "member" : "org.apache.spark.ml.boosting.GBMLossAggregator.add", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#add(instance:org.apache.spark.ml.boosting.GBMLossInstance):GBMLossAggregator.this.type", "kind" : "def"}, {"label" : "dim", "tail" : ": Int", "member" : "org.apache.spark.ml.boosting.GBMLossAggregator.dim", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#dim:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.boosting.GBMLossAggregator#<init>", "error" : "unsupported entity"}, {"label" : "loss", "tail" : "(): Double", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#loss:Double", "kind" : "def"}, {"label" : "weight", "tail" : "(): Double", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.weight", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#weight:Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(): Vector", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#gradient:org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "merge", "tail" : "(other: GBMLossAggregator): GBMLossAggregator", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.merge", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#merge(other:Agg):Agg", "kind" : "def"}, {"label" : "gradientSumArray", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.gradientSumArray", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#gradientSumArray:Array[Double]", "kind" : "lazy val"}, {"label" : "lossSum", "tail" : ": Double", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.lossSum", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#lossSum:Double", "kind" : "val"}, {"label" : "weightSum", "tail" : ": Double", "member" : "org.apache.spark.ml.optim.aggregator.DifferentiableLossAggregator.weightSum", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#weightSum:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/boosting\/GBMLossAggregator.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.boosting.GBMRegressionLoss", "trait" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html", "kind" : "trait", "members_trait" : [{"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#gradient(label:Double,prediction:Double):Double", "kind" : "abstract def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMRegressionLoss.html#loss(label:Double,prediction:Double):Double", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.GBMScalarLoss", "trait" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html", "kind" : "trait", "members_trait" : [{"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#gradient(label:Double,prediction:Double):Double", "kind" : "abstract def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#loss(label:Double,prediction:Double):Double", "kind" : "abstract def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/GBMScalarLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.HasHessian", "trait" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/HasHessian.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.HasScalarHessian", "trait" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html", "kind" : "trait", "members_trait" : [{"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/HasScalarHessian.html#hessian(label:Double,prediction:Double):Double", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.boosting.HuberLoss", "shortDescription" : "", "members_case class" : [{"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.HuberLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.HuberLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.boosting.HuberLoss#<init>", "error" : "unsupported entity"}, {"label" : "delta", "tail" : ": Double", "member" : "org.apache.spark.ml.boosting.HuberLoss.delta", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#delta:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/ml\/boosting\/HuberLoss.html", "kind" : "case class"}, {"name" : "org.apache.spark.ml.boosting.LogCoshLoss", "case object" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html", "shortDescription" : "", "members_case object" : [{"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.LogCoshLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#hessian(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.LogCoshLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.LogCoshLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/LogCoshLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "org.apache.spark.ml.boosting.LogLoss", "shortDescription" : "", "members_case class" : [{"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.boosting.LogLoss.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.LogLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.LogLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.LogLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.LogLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.LogLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#dim:Int", "kind" : "def"}, {"member" : "org.apache.spark.ml.boosting.LogLoss#<init>", "error" : "unsupported entity"}, {"label" : "numClasses", "tail" : ": Int", "member" : "org.apache.spark.ml.boosting.LogLoss.numClasses", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#numClasses:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/ml\/boosting\/LogLoss.html", "kind" : "case class"}, {"name" : "org.apache.spark.ml.boosting.QuantileLoss", "shortDescription" : "", "members_case class" : [{"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.QuantileLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.QuantileLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.boosting.QuantileLoss#<init>", "error" : "unsupported entity"}, {"label" : "quantile", "tail" : ": Double", "member" : "org.apache.spark.ml.boosting.QuantileLoss.quantile", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#quantile:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/ml\/boosting\/QuantileLoss.html", "kind" : "case class"}, {"name" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss", "shortDescription" : "", "members_case class" : [{"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#hessian(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss#<init>", "error" : "unsupported entity"}, {"label" : "alpha", "tail" : ": Double", "member" : "org.apache.spark.ml.boosting.ScaledLogCoshLoss.alpha", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#alpha:Double", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/ml\/boosting\/ScaledLogCoshLoss.html", "kind" : "case class"}, {"name" : "org.apache.spark.ml.boosting.SquaredLoss", "case object" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html", "shortDescription" : "", "members_case object" : [{"label" : "hessian", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.SquaredLoss.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#hessian(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.SquaredLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#gradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.SquaredLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#loss(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "hessian", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.HasScalarHessian.hessian", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#hessian(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "encodeLabel", "tail" : "(label: Double): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMRegressionLoss.encodeLabel", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#encodeLabel(label:Double):Array[Double]", "kind" : "def"}, {"label" : "gradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.gradient", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#gradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "loss", "tail" : "(label: Array[Double], prediction: Array[Double]): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.loss", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#loss(label:Array[Double],prediction:Array[Double]):Double", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#negativeGradient(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "dim", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMScalarLoss.dim", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#dim:Int", "kind" : "def"}, {"label" : "negativeGradient", "tail" : "(label: Array[Double], prediction: Array[Double]): Array[Double]", "member" : "org.apache.spark.ml.boosting.GBMLoss.negativeGradient", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#negativeGradient(label:Array[Double],prediction:Array[Double]):Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/boosting\/SquaredLoss$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}], "org.apache.spark" : [], "org.apache" : [], "org.apache.spark.ml" : [], "org.apache.spark.ml.regression" : [{"name" : "org.apache.spark.ml.regression.BaggingRegressionModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.write", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BaggingRegressionModel", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.copy", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.BaggingRegressionModel", "kind" : "def"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.predict", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.numModels", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.regression.BaggingRegressionModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.regression.BaggingRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.models", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "subspaces", "tail" : ": Array[Array[Int]]", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.subspaces", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#subspaces:Array[Array[Int]]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.uid", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BaggingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BaggingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[BaggingRegressionModel]): BaggingRegressionModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[BaggingRegressionModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BaggingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BaggingRegressionModel", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.load", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#load(path:String):org.apache.spark.ml.regression.BaggingRegressionModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BaggingRegressionModel]", "member" : "org.apache.spark.ml.regression.BaggingRegressionModel.read", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.BaggingRegressionModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/BaggingRegressionModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.BaggingRegressor", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.BaggingRegressor.write", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): BaggingRegressionModel", "member" : "org.apache.spark.ml.regression.BaggingRegressor.train", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.regression.BaggingRegressionModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BaggingRegressor", "member" : "org.apache.spark.ml.regression.BaggingRegressor.copy", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.BaggingRegressor", "kind" : "def"}, {"label" : "setParallelism", "tail" : "(value: Int): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setParallelism", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setParallelism(value:Int):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setNumBaseLearners(value:Int):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setSubspaceRatio", "tail" : "(value: Double): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setSubspaceRatio(value:Double):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setSubsampleRatio", "tail" : "(value: Double): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setSubsampleRatio(value:Double):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setReplacement", "tail" : "(value: Boolean): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setReplacement", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setReplacement(value:Boolean):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setWeightCol(value:String):BaggingRegressor.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleRegressorType): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BaggingRegressor.setBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleRegressorType):BaggingRegressor.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.BaggingRegressor#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.regression.BaggingRegressor#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.BaggingRegressor.uid", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#save(path:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): BaggingRegressionModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BaggingRegressor", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BaggingRegressor", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): BaggingRegressor", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[BaggingRegressionModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): BaggingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): BaggingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BaggingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BaggingRegressor", "member" : "org.apache.spark.ml.regression.BaggingRegressor.load", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#load(path:String):org.apache.spark.ml.regression.BaggingRegressor", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BaggingRegressor]", "member" : "org.apache.spark.ml.regression.BaggingRegressor.read", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.BaggingRegressor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/BaggingRegressor.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.BoostingRegressionModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.write", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BoostingRegressionModel", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.copy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.BoostingRegressionModel", "kind" : "def"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.predict", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.numModels", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.regression.BoostingRegressionModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.regression.BoostingRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.models", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "weights", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.weights", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#weights:Array[Double]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.uid", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getVotingStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.getVotingStrategy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getVotingStrategy:String", "kind" : "def"}, {"label" : "votingStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.votingStrategy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#votingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getLossType", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.getLossType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getLossType:String", "kind" : "def"}, {"label" : "lossType", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.lossType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#lossType:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BoostingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BoostingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[BoostingRegressionModel]): BoostingRegressionModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[BoostingRegressionModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BoostingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BoostingRegressionModel", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.load", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#load(path:String):org.apache.spark.ml.regression.BoostingRegressionModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BoostingRegressionModel]", "member" : "org.apache.spark.ml.regression.BoostingRegressionModel.read", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.BoostingRegressionModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/BoostingRegressionModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.BoostingRegressor", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.BoostingRegressor.write", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): BoostingRegressionModel", "member" : "org.apache.spark.ml.regression.BoostingRegressor.train", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.regression.BoostingRegressionModel", "kind" : "def"}, {"label" : "loss", "tail" : "(error: Double): Double", "member" : "org.apache.spark.ml.regression.BoostingRegressor.loss", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#loss(error:Double):Double", "kind" : "def"}, {"label" : "error", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.regression.BoostingRegressor.error", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#error(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BoostingRegressor", "member" : "org.apache.spark.ml.regression.BoostingRegressor.copy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.BoostingRegressor", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.BoostingRegressor#<init>", "error" : "unsupported entity"}, {"label" : "setVotingStrategy", "tail" : "(value: String): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setVotingStrategy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setVotingStrategy(value:String):BoostingRegressor.this.type", "kind" : "def"}, {"label" : "setLossType", "tail" : "(value: String): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setLossType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setLossType(value:String):BoostingRegressor.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setWeightCol(value:String):BoostingRegressor.this.type", "kind" : "def"}, {"label" : "setCheckpointInterval", "tail" : "(value: Int): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setCheckpointInterval(value:Int):BoostingRegressor.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setNumBaseLearners(value:Int):BoostingRegressor.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleRegressorType): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.regression.BoostingRegressor.setBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleRegressorType):BoostingRegressor.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.BoostingRegressor#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.BoostingRegressor.uid", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getVotingStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.getVotingStrategy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getVotingStrategy:String", "kind" : "def"}, {"label" : "votingStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.votingStrategy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#votingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getLossType", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.getLossType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getLossType:String", "kind" : "def"}, {"label" : "lossType", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.BoostingRegressorParams.lossType", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#lossType:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): BoostingRegressionModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BoostingRegressor", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BoostingRegressor", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): BoostingRegressor", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[BoostingRegressionModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): BoostingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): BoostingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BoostingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BoostingRegressor", "member" : "org.apache.spark.ml.regression.BoostingRegressor.load", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#load(path:String):org.apache.spark.ml.regression.BoostingRegressor", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BoostingRegressor]", "member" : "org.apache.spark.ml.regression.BoostingRegressor.read", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.BoostingRegressor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/BoostingRegressor.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.DummyRegressionModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#toString():String", "kind" : "def"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.predict", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.DummyRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "copy", "tail" : "(extra: ParamMap): DummyRegressionModel", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.copy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.DummyRegressionModel", "kind" : "def"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.write", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.setTol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setTol(value:Double):DummyRegressionModel.this.type", "kind" : "def"}, {"label" : "setQuantile", "tail" : "(value: Double): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.setQuantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setQuantile(value:Double):DummyRegressionModel.this.type", "kind" : "def"}, {"label" : "setConstant", "tail" : "(value: Double): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.setConstant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setConstant(value:Double):DummyRegressionModel.this.type", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(value: String): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.setStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setStrategy(value:String):DummyRegressionModel.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.DummyRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "prediction", "tail" : ": Double", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.prediction", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#prediction:Double", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.uid", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getQuantile", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getQuantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getQuantile:Double", "kind" : "def"}, {"label" : "quantile", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.quantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#quantile:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getConstant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.constant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.strategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): DummyRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): DummyRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DummyRegressionModel]): DummyRegressionModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DummyRegressionModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): DummyRegressionModel", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.load", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#load(path:String):org.apache.spark.ml.regression.DummyRegressionModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[DummyRegressionModel]", "member" : "org.apache.spark.ml.regression.DummyRegressionModel.read", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.DummyRegressionModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/DummyRegressionModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.DummyRegressor", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_]): DummyRegressionModel", "member" : "org.apache.spark.ml.regression.DummyRegressor.train", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.regression.DummyRegressionModel", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): DummyRegressor.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressor.setTol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setTol(value:Double):DummyRegressor.this.type", "kind" : "def"}, {"label" : "setQuantile", "tail" : "(value: Double): DummyRegressor.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressor.setQuantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setQuantile(value:Double):DummyRegressor.this.type", "kind" : "def"}, {"label" : "setConstant", "tail" : "(value: Double): DummyRegressor.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressor.setConstant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setConstant(value:Double):DummyRegressor.this.type", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(value: String): DummyRegressor.this.type", "member" : "org.apache.spark.ml.regression.DummyRegressor.setStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setStrategy(value:String):DummyRegressor.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.DummyRegressor#<init>", "error" : "unsupported entity"}, {"label" : "copy", "tail" : "(extra: ParamMap): DummyRegressor", "member" : "org.apache.spark.ml.regression.DummyRegressor.copy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.DummyRegressor", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.DummyRegressor#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.DummyRegressor.uid", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getQuantile", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getQuantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getQuantile:Double", "kind" : "def"}, {"label" : "quantile", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.quantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#quantile:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getConstant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.constant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.strategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): DummyRegressionModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): DummyRegressor", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): DummyRegressor", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): DummyRegressor", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[DummyRegressionModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DummyRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DummyRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[DummyRegressor]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DummyRegressor", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/DummyRegressor.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.DummyRegressorParams", "object" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html", "members_object" : [{"label" : "supportedStrategy", "tail" : ": Array[String]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.supportedStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#supportedStrategy:Array[String]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html", "kind" : "trait", "members_trait" : [{"label" : "getQuantile", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getQuantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getQuantile:Double", "kind" : "def"}, {"label" : "quantile", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.quantile", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#quantile:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getConstant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.constant", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.getStrategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.DummyRegressorParams.strategy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyRegressorParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "org\/apache\/spark\/ml\/regression\/DummyRegressorParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.regression.GBMRegressionModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.write", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): GBMRegressionModel", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.copy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.GBMRegressionModel", "kind" : "def"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.predict", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.numModels", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.regression.GBMRegressionModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.regression.GBMRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : ": EnsemblePredictionModelType", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.init", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#init:org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "val"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.models", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "subspaces", "tail" : ": Array[Array[Int]]", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.subspaces", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#subspaces:Array[Array[Int]]", "kind" : "val"}, {"label" : "weights", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.weights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#weights:Array[Double]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.uid", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getAlpha", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getAlpha", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getAlpha:Double", "kind" : "def"}, {"label" : "alpha", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.alpha", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#alpha:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getLoss", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getLoss", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getLoss:String", "kind" : "def"}, {"label" : "loss", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.loss", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#loss:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getInitStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getInitStrategy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getInitStrategy:String", "kind" : "def"}, {"label" : "initStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.initStrategy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#initStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getNumRounds", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMParams.getNumRounds", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getNumRounds:Int", "kind" : "def"}, {"label" : "numRounds", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.boosting.GBMParams.numRounds", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#numRounds:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getValidationTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getValidationTol:Double", "kind" : "final def"}, {"label" : "validationTol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.boosting.GBMParams.validationTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#validationTol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getLearningRate", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getLearningRate", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getLearningRate:Double", "kind" : "def"}, {"label" : "learningRate", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.boosting.GBMParams.learningRate", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#learningRate:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getUpdates", "tail" : "(): String", "member" : "org.apache.spark.ml.boosting.GBMParams.getUpdates", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getUpdates:String", "kind" : "def"}, {"label" : "updates", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.boosting.GBMParams.updates", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#updates:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getOptimizedWeights", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.boosting.GBMParams.getOptimizedWeights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getOptimizedWeights:Boolean", "kind" : "def"}, {"label" : "optimizedWeights", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.boosting.GBMParams.optimizedWeights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#optimizedWeights:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationIndicatorCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.getValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getValidationIndicatorCol:String", "kind" : "final def"}, {"label" : "validationIndicatorCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.validationIndicatorCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#validationIndicatorCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMaxIter", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.getMaxIter", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getMaxIter:Int", "kind" : "final def"}, {"label" : "maxIter", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.maxIter", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#maxIter:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): GBMRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): GBMRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[GBMRegressionModel]): GBMRegressionModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[GBMRegressionModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GBMRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): GBMRegressionModel", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.load", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#load(path:String):org.apache.spark.ml.regression.GBMRegressionModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[GBMRegressionModel]", "member" : "org.apache.spark.ml.regression.GBMRegressionModel.read", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.GBMRegressionModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/GBMRegressionModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.GBMRegressor", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.GBMRegressor.write", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): GBMRegressionModel", "member" : "org.apache.spark.ml.regression.GBMRegressor.train", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.regression.GBMRegressionModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): GBMRegressor", "member" : "org.apache.spark.ml.regression.GBMRegressor.copy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.GBMRegressor", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.GBMRegressor#<init>", "error" : "unsupported entity"}, {"label" : "setSeed", "tail" : "(value: Long): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setSeed", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setSeed(value:Long):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setCheckpointInterval", "tail" : "(value: Int): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setCheckpointInterval(value:Int):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setNumRounds", "tail" : "(value: Int): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setNumRounds", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setNumRounds(value:Int):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setValidationTol", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setValidationTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setValidationTol(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setValidationIndicatorCol", "tail" : "(value: String): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setValidationIndicatorCol(value:String):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setUpdates", "tail" : "(value: String): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setUpdates", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setUpdates(value:String):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setOptimizedWeights", "tail" : "(value: Boolean): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setOptimizedWeights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setOptimizedWeights(value:Boolean):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setTol(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setMaxIter", "tail" : "(value: Int): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setMaxIter", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setMaxIter(value:Int):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setAggregationDepth", "tail" : "(value: Int): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setAggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setAggregationDepth(value:Int):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setLearningRate", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setLearningRate", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setLearningRate(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setAlpha", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setAlpha", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setAlpha(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setLoss", "tail" : "(value: String): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setLoss", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setLoss(value:String):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setInitStrategy", "tail" : "(value: String): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setInitStrategy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setInitStrategy(value:String):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setSubspaceRatio", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setSubspaceRatio(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setSubsampleRatio", "tail" : "(value: Double): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setSubsampleRatio(value:Double):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setReplacement", "tail" : "(value: Boolean): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setReplacement", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setReplacement(value:Boolean):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setNumBaseLearners(value:Int):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleRegressorType): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleRegressorType):GBMRegressor.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): GBMRegressor.this.type", "member" : "org.apache.spark.ml.regression.GBMRegressor.setWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setWeightCol(value:String):GBMRegressor.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.GBMRegressor#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.GBMRegressor.uid", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getAlpha", "tail" : "(): Double", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getAlpha", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getAlpha:Double", "kind" : "def"}, {"label" : "alpha", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.alpha", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#alpha:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getLoss", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getLoss", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getLoss:String", "kind" : "def"}, {"label" : "loss", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.loss", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#loss:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getInitStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.getInitStrategy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getInitStrategy:String", "kind" : "def"}, {"label" : "initStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.regression.GBMRegressorParams.initStrategy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#initStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getNumRounds", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMParams.getNumRounds", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getNumRounds:Int", "kind" : "def"}, {"label" : "numRounds", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.boosting.GBMParams.numRounds", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#numRounds:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getValidationTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getValidationTol:Double", "kind" : "final def"}, {"label" : "validationTol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.boosting.GBMParams.validationTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#validationTol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getLearningRate", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getLearningRate", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getLearningRate:Double", "kind" : "def"}, {"label" : "learningRate", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.boosting.GBMParams.learningRate", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#learningRate:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getUpdates", "tail" : "(): String", "member" : "org.apache.spark.ml.boosting.GBMParams.getUpdates", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getUpdates:String", "kind" : "def"}, {"label" : "updates", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.boosting.GBMParams.updates", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#updates:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getOptimizedWeights", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.boosting.GBMParams.getOptimizedWeights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getOptimizedWeights:Boolean", "kind" : "def"}, {"label" : "optimizedWeights", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.boosting.GBMParams.optimizedWeights", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#optimizedWeights:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationIndicatorCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.getValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getValidationIndicatorCol:String", "kind" : "final def"}, {"label" : "validationIndicatorCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.validationIndicatorCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#validationIndicatorCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMaxIter", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.getMaxIter", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getMaxIter:Int", "kind" : "final def"}, {"label" : "maxIter", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.maxIter", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#maxIter:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): GBMRegressionModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): GBMRegressor", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): GBMRegressor", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): GBMRegressor", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[GBMRegressionModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): GBMRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): GBMRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GBMRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): GBMRegressor", "member" : "org.apache.spark.ml.regression.GBMRegressor.load", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#load(path:String):org.apache.spark.ml.regression.GBMRegressor", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[GBMRegressor]", "member" : "org.apache.spark.ml.regression.GBMRegressor.read", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.GBMRegressor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/GBMRegressor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/GBMRegressor.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.StackingRegressionModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.write", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): StackingRegressionModel", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.copy", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.StackingRegressionModel", "kind" : "def"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.predict", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.StackingRegressionModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.regression.StackingRegressionModel#<init>", "error" : "unsupported entity"}, {"label" : "stack", "tail" : ": EnsemblePredictionModelType", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.stack", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#stack:org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "val"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.models", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.uid", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getBaseLearners", "tail" : "(): Array[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.getBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getBaseLearners:Array[L]", "kind" : "def"}, {"label" : "baseLearners", "tail" : ": Param[Array[EnsembleRegressorType]]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.baseLearners", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#baseLearners:org.apache.spark.ml.param.Param[Array[L]]", "kind" : "val"}, {"label" : "getStacker", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasStacker.getStacker", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getStacker:L", "kind" : "def"}, {"label" : "stacker", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasStacker.stacker", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#stacker:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): StackingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): StackingRegressionModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[StackingRegressionModel]): StackingRegressionModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[StackingRegressionModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): StackingRegressionModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): StackingRegressionModel", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.load", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#load(path:String):org.apache.spark.ml.regression.StackingRegressionModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[StackingRegressionModel]", "member" : "org.apache.spark.ml.regression.StackingRegressionModel.read", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.StackingRegressionModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/StackingRegressionModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.regression.StackingRegressor", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.regression.StackingRegressor.write", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): StackingRegressionModel", "member" : "org.apache.spark.ml.regression.StackingRegressor.train", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.regression.StackingRegressionModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): StackingRegressor", "member" : "org.apache.spark.ml.regression.StackingRegressor.copy", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.regression.StackingRegressor", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.StackingRegressor#<init>", "error" : "unsupported entity"}, {"label" : "setParallelism", "tail" : "(value: Int): StackingRegressor.this.type", "member" : "org.apache.spark.ml.regression.StackingRegressor.setParallelism", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setParallelism(value:Int):StackingRegressor.this.type", "kind" : "def"}, {"label" : "setStacker", "tail" : "(value: EnsembleRegressorType): StackingRegressor.this.type", "member" : "org.apache.spark.ml.regression.StackingRegressor.setStacker", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setStacker(value:org.apache.spark.ml.ensemble.EnsembleRegressorType):StackingRegressor.this.type", "kind" : "def"}, {"label" : "setBaseLearners", "tail" : "(value: Array[EnsembleRegressorType]): StackingRegressor.this.type", "member" : "org.apache.spark.ml.regression.StackingRegressor.setBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setBaseLearners(value:Array[org.apache.spark.ml.ensemble.EnsembleRegressorType]):StackingRegressor.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.regression.StackingRegressor#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.regression.StackingRegressor.uid", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getBaseLearners", "tail" : "(): Array[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.getBaseLearners", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getBaseLearners:Array[L]", "kind" : "def"}, {"label" : "baseLearners", "tail" : ": Param[Array[EnsembleRegressorType]]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.baseLearners", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#baseLearners:org.apache.spark.ml.param.Param[Array[L]]", "kind" : "val"}, {"label" : "getStacker", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasStacker.getStacker", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getStacker:L", "kind" : "def"}, {"label" : "stacker", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasStacker.stacker", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#stacker:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): StackingRegressionModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): StackingRegressor", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): StackingRegressor", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): StackingRegressor", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[StackingRegressionModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): StackingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): StackingRegressionModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): StackingRegressor.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): StackingRegressor", "member" : "org.apache.spark.ml.regression.StackingRegressor.load", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#load(path:String):org.apache.spark.ml.regression.StackingRegressor", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[StackingRegressor]", "member" : "org.apache.spark.ml.regression.StackingRegressor.read", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.regression.StackingRegressor]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/regression\/StackingRegressor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/regression\/StackingRegressor.html", "kind" : "class"}], "org.apache.spark.ml.classification" : [{"name" : "org.apache.spark.ml.classification.BaggingClassificationModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.write", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.copy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.BaggingClassificationModel", "kind" : "def"}, {"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "predictRaw", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.predictRaw", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#predictRaw(features:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.numModels", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.classification.BaggingClassificationModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.classification.BaggingClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.models", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "subspaces", "tail" : ": Array[Array[Int]]", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.subspaces", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#subspaces:Array[Array[Int]]", "kind" : "val"}, {"label" : "numClasses", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.numClasses", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#numClasses:Int", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.uid", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getVotingStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.BaggingClassifierParams.getVotingStrategy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getVotingStrategy:String", "kind" : "def"}, {"label" : "votingStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.BaggingClassifierParams.votingStrategy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#votingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleClassifierType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleClassifierType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleClassifierType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "probability2prediction", "tail" : "(probability: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.probability2prediction", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#probability2prediction(probability:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "predictProbability", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.predictProbability", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#predictProbability(features:FeaturesType):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "raw2prediction", "tail" : "(rawPrediction: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2prediction", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#raw2prediction(rawPrediction:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "raw2probability", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2probability", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#raw2probability(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transform", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setThresholds(value:Array[Double]):M", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setProbabilityCol(value:String):M", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.classification.ClassificationModel.predict", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#predict(features:FeaturesType):Double", "kind" : "def"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ClassificationModel.transformImpl", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.ClassificationModel.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setRawPredictionCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BaggingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BaggingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[BaggingClassificationModel]): BaggingClassificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[BaggingClassificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BaggingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.load", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#load(path:String):org.apache.spark.ml.classification.BaggingClassificationModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BaggingClassificationModel]", "member" : "org.apache.spark.ml.classification.BaggingClassificationModel.read", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.BaggingClassificationModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/BaggingClassificationModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.BaggingClassifier", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.BaggingClassifier.write", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): BaggingClassificationModel", "member" : "org.apache.spark.ml.classification.BaggingClassifier.train", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.classification.BaggingClassificationModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BaggingClassifier", "member" : "org.apache.spark.ml.classification.BaggingClassifier.copy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.BaggingClassifier", "kind" : "def"}, {"label" : "setParallelism", "tail" : "(value: Int): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setParallelism", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setParallelism(value:Int):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setNumBaseLearners(value:Int):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setVotingStrategy", "tail" : "(value: String): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setVotingStrategy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setVotingStrategy(value:String):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setSubspaceRatio", "tail" : "(value: Double): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setSubspaceRatio(value:Double):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setSubsampleRatio", "tail" : "(value: Double): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setSubsampleRatio(value:Double):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setReplacement", "tail" : "(value: Boolean): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setReplacement", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setReplacement(value:Boolean):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setWeightCol(value:String):BaggingClassifier.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleClassifierType): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BaggingClassifier.setBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleClassifierType):BaggingClassifier.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.BaggingClassifier#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.classification.BaggingClassifier#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.BaggingClassifier.uid", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getVotingStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.BaggingClassifierParams.getVotingStrategy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getVotingStrategy:String", "kind" : "def"}, {"label" : "votingStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.BaggingClassifierParams.votingStrategy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#votingStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleClassifierType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleClassifierType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleClassifierType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): BaggingClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setThresholds(value:Array[Double]):E", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): BaggingClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setProbabilityCol(value:String):E", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumClasses", "tail" : "(dataset: Dataset[_], maxNumClasses: Int): Int", "member" : "org.apache.spark.ml.classification.Classifier.getNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getNumClasses(dataset:org.apache.spark.sql.Dataset[_],maxNumClasses:Int):Int", "kind" : "def"}, {"label" : "validateLabel", "tail" : "(label: Double, numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateLabel", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#validateLabel(label:Double,numClasses:Int):Unit", "kind" : "def"}, {"label" : "validateNumClasses", "tail" : "(numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#validateNumClasses(numClasses:Int):Unit", "kind" : "def"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.classification.Classifier.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): BaggingClassifier", "member" : "org.apache.spark.ml.classification.Classifier.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setRawPredictionCol(value:String):E", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): BaggingClassificationModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BaggingClassifier", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BaggingClassifier", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): BaggingClassifier", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[BaggingClassificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): BaggingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): BaggingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BaggingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BaggingClassifier", "member" : "org.apache.spark.ml.classification.BaggingClassifier.load", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#load(path:String):org.apache.spark.ml.classification.BaggingClassifier", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BaggingClassifier]", "member" : "org.apache.spark.ml.classification.BaggingClassifier.read", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.BaggingClassifier]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/BaggingClassifier.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.BoostingClassificationModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.write", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.copy", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.BoostingClassificationModel", "kind" : "def"}, {"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "predictRaw", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.predictRaw", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#predictRaw(features:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.numModels", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.classification.BoostingClassificationModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.classification.BoostingClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.models", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "weights", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.weights", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#weights:Array[Double]", "kind" : "val"}, {"label" : "numClasses", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.numClasses", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#numClasses:Int", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.uid", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.BoostingClassifierParams.getAlgorithm", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getAlgorithm:String", "kind" : "def"}, {"label" : "algorithm", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.BoostingClassifierParams.algorithm", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#algorithm:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleClassifierType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleClassifierType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleClassifierType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "probability2prediction", "tail" : "(probability: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.probability2prediction", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#probability2prediction(probability:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "predictProbability", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.predictProbability", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#predictProbability(features:FeaturesType):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "raw2prediction", "tail" : "(rawPrediction: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2prediction", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#raw2prediction(rawPrediction:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "raw2probability", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2probability", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#raw2probability(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transform", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setThresholds(value:Array[Double]):M", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setProbabilityCol(value:String):M", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.classification.ClassificationModel.predict", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#predict(features:FeaturesType):Double", "kind" : "def"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ClassificationModel.transformImpl", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.ClassificationModel.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setRawPredictionCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BoostingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BoostingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[BoostingClassificationModel]): BoostingClassificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[BoostingClassificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BoostingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.load", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#load(path:String):org.apache.spark.ml.classification.BoostingClassificationModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BoostingClassificationModel]", "member" : "org.apache.spark.ml.classification.BoostingClassificationModel.read", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.BoostingClassificationModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/BoostingClassificationModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.BoostingClassifier", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.BoostingClassifier.write", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): BoostingClassificationModel", "member" : "org.apache.spark.ml.classification.BoostingClassifier.train", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.classification.BoostingClassificationModel", "kind" : "def"}, {"label" : "error", "tail" : "(label: Double, prediction: Double): Double", "member" : "org.apache.spark.ml.classification.BoostingClassifier.error", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#error(label:Double,prediction:Double):Double", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): BoostingClassifier", "member" : "org.apache.spark.ml.classification.BoostingClassifier.copy", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.BoostingClassifier", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.BoostingClassifier#<init>", "error" : "unsupported entity"}, {"label" : "setAlgorithm", "tail" : "(value: String): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BoostingClassifier.setAlgorithm", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setAlgorithm(value:String):BoostingClassifier.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BoostingClassifier.setWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setWeightCol(value:String):BoostingClassifier.this.type", "kind" : "def"}, {"label" : "setCheckpointInterval", "tail" : "(value: Int): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BoostingClassifier.setCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setCheckpointInterval(value:Int):BoostingClassifier.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BoostingClassifier.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setNumBaseLearners(value:Int):BoostingClassifier.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleClassifierType): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.classification.BoostingClassifier.setBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleClassifierType):BoostingClassifier.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.BoostingClassifier#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.BoostingClassifier.uid", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getAlgorithm", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.BoostingClassifierParams.getAlgorithm", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getAlgorithm:String", "kind" : "def"}, {"label" : "algorithm", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.BoostingClassifierParams.algorithm", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#algorithm:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleClassifierType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleClassifierType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleClassifierType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getNumClasses", "tail" : "(dataset: Dataset[_], maxNumClasses: Int): Int", "member" : "org.apache.spark.ml.classification.Classifier.getNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getNumClasses(dataset:org.apache.spark.sql.Dataset[_],maxNumClasses:Int):Int", "kind" : "def"}, {"label" : "validateLabel", "tail" : "(label: Double, numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateLabel", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#validateLabel(label:Double,numClasses:Int):Unit", "kind" : "def"}, {"label" : "validateNumClasses", "tail" : "(numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#validateNumClasses(numClasses:Int):Unit", "kind" : "def"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.classification.Classifier.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): BoostingClassifier", "member" : "org.apache.spark.ml.classification.Classifier.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setRawPredictionCol(value:String):E", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): BoostingClassificationModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): BoostingClassifier", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): BoostingClassifier", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): BoostingClassifier", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[BoostingClassificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): BoostingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): BoostingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): BoostingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): BoostingClassifier", "member" : "org.apache.spark.ml.classification.BoostingClassifier.load", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#load(path:String):org.apache.spark.ml.classification.BoostingClassifier", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[BoostingClassifier]", "member" : "org.apache.spark.ml.classification.BoostingClassifier.read", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.BoostingClassifier]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/BoostingClassifier.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.DummyClassificationModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#toString():String", "kind" : "def"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.write", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "predictRaw", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.predictRaw", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#predictRaw(features:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.setTol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setTol(value:Double):DummyClassificationModel.this.type", "kind" : "def"}, {"label" : "setConstant", "tail" : "(value: Double): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.setConstant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setConstant(value:Double):DummyClassificationModel.this.type", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(value: String): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.setStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setStrategy(value:String):DummyClassificationModel.this.type", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.copy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.DummyClassificationModel", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.DummyClassificationModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.classification.DummyClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "probability", "tail" : ": Vector", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.probability", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#probability:org.apache.spark.ml.linalg.Vector", "kind" : "val"}, {"label" : "rawPrediction", "tail" : ": Vector", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.rawPrediction", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#rawPrediction:org.apache.spark.ml.linalg.Vector", "kind" : "val"}, {"label" : "numClasses", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.numClasses", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#numClasses:Int", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.uid", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getConstant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.constant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.strategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "probability2prediction", "tail" : "(probability: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.probability2prediction", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#probability2prediction(probability:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "predictProbability", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.predictProbability", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#predictProbability(features:FeaturesType):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "raw2prediction", "tail" : "(rawPrediction: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2prediction", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#raw2prediction(rawPrediction:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "raw2probability", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2probability", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#raw2probability(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transform", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setThresholds(value:Array[Double]):M", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setProbabilityCol(value:String):M", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.classification.ClassificationModel.predict", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#predict(features:FeaturesType):Double", "kind" : "def"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ClassificationModel.transformImpl", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.ClassificationModel.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setRawPredictionCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): DummyClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): DummyClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[DummyClassificationModel]): DummyClassificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[DummyClassificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.load", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#load(path:String):org.apache.spark.ml.classification.DummyClassificationModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[DummyClassificationModel]", "member" : "org.apache.spark.ml.classification.DummyClassificationModel.read", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.DummyClassificationModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/DummyClassificationModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.DummyClassifier", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html", "members_class" : [{"label" : "train", "tail" : "(dataset: Dataset[_]): DummyClassificationModel", "member" : "org.apache.spark.ml.classification.DummyClassifier.train", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.classification.DummyClassificationModel", "kind" : "def"}, {"label" : "setConstant", "tail" : "(value: Double): DummyClassifier.this.type", "member" : "org.apache.spark.ml.classification.DummyClassifier.setConstant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setConstant(value:Double):DummyClassifier.this.type", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(value: String): DummyClassifier.this.type", "member" : "org.apache.spark.ml.classification.DummyClassifier.setStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setStrategy(value:String):DummyClassifier.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.DummyClassifier#<init>", "error" : "unsupported entity"}, {"label" : "copy", "tail" : "(extra: ParamMap): DummyClassifier", "member" : "org.apache.spark.ml.classification.DummyClassifier.copy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.DummyClassifier", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.DummyClassifier#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.DummyClassifier.uid", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#uid:String", "kind" : "val"}, {"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.util.DefaultParamsWritable.write", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getConstant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.constant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.strategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): DummyClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setThresholds(value:Array[Double]):E", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): DummyClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setProbabilityCol(value:String):E", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumClasses", "tail" : "(dataset: Dataset[_], maxNumClasses: Int): Int", "member" : "org.apache.spark.ml.classification.Classifier.getNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getNumClasses(dataset:org.apache.spark.sql.Dataset[_],maxNumClasses:Int):Int", "kind" : "def"}, {"label" : "validateLabel", "tail" : "(label: Double, numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateLabel", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#validateLabel(label:Double,numClasses:Int):Unit", "kind" : "def"}, {"label" : "validateNumClasses", "tail" : "(numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#validateNumClasses(numClasses:Int):Unit", "kind" : "def"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.classification.Classifier.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): DummyClassifier", "member" : "org.apache.spark.ml.classification.Classifier.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setRawPredictionCol(value:String):E", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): DummyClassificationModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): DummyClassifier", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): DummyClassifier", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): DummyClassifier", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[DummyClassificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DummyClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DummyClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "read", "tail" : "(): MLReader[DummyClassifier]", "member" : "org.apache.spark.ml.util.DefaultParamsReadable.read", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#read:org.apache.spark.ml.util.MLReader[T]", "kind" : "def"}, {"label" : "load", "tail" : "(path: String): DummyClassifier", "member" : "org.apache.spark.ml.util.MLReadable.load", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#load(path:String):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/DummyClassifier.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.DummyClassifierParams", "object" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html", "members_object" : [{"label" : "supportedStrategy", "tail" : ": Array[String]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.supportedStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#supportedStrategy:Array[String]", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html", "kind" : "trait", "members_trait" : [{"label" : "getConstant", "tail" : "(): Double", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getConstant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getConstant:Double", "kind" : "def"}, {"label" : "constant", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.constant", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#constant:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.getStrategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getStrategy:String", "kind" : "def"}, {"label" : "strategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.DummyClassifierParams.strategy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#strategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.PredictorParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): DummyClassifierParams.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "copy", "tail" : "(extra: ParamMap): Params", "member" : "org.apache.spark.ml.param.Params.copy", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.Params", "kind" : "abstract def"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.util.Identifiable.uid", "link" : "org\/apache\/spark\/ml\/classification\/DummyClassifierParams.html#uid:String", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "org.apache.spark.ml.classification.GBMClassificationModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.write", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.copy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.GBMClassificationModel", "kind" : "def"}, {"label" : "predictRaw", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.predictRaw", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#predictRaw(features:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "raw2probabilityInPlace", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.raw2probabilityInPlace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#raw2probabilityInPlace(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "numModels", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.numModels", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#numModels:Int", "kind" : "val"}, {"member" : "org.apache.spark.ml.classification.GBMClassificationModel#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.classification.GBMClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "dim", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.dim", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#dim:Int", "kind" : "val"}, {"label" : "init", "tail" : ": EnsembleClassificationModelType", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.init", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#init:org.apache.spark.ml.ensemble.EnsembleClassificationModelType", "kind" : "val"}, {"label" : "models", "tail" : ": Array[Array[EnsemblePredictionModelType]]", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.models", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#models:Array[Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]]", "kind" : "val"}, {"label" : "subspaces", "tail" : ": Array[Array[Int]]", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.subspaces", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#subspaces:Array[Array[Int]]", "kind" : "val"}, {"label" : "weights", "tail" : ": Array[Array[Double]]", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.weights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#weights:Array[Array[Double]]", "kind" : "val"}, {"label" : "numClasses", "tail" : ": Int", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.numClasses", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#numClasses:Int", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.uid", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getLoss", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.getLoss", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getLoss:String", "kind" : "def"}, {"label" : "loss", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.loss", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#loss:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getInitStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.getInitStrategy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getInitStrategy:String", "kind" : "def"}, {"label" : "initStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.initStrategy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#initStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumRounds", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMParams.getNumRounds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getNumRounds:Int", "kind" : "def"}, {"label" : "numRounds", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.boosting.GBMParams.numRounds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#numRounds:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getValidationTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getValidationTol:Double", "kind" : "final def"}, {"label" : "validationTol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.boosting.GBMParams.validationTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#validationTol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getLearningRate", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getLearningRate", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getLearningRate:Double", "kind" : "def"}, {"label" : "learningRate", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.boosting.GBMParams.learningRate", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#learningRate:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getUpdates", "tail" : "(): String", "member" : "org.apache.spark.ml.boosting.GBMParams.getUpdates", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getUpdates:String", "kind" : "def"}, {"label" : "updates", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.boosting.GBMParams.updates", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#updates:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getOptimizedWeights", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.boosting.GBMParams.getOptimizedWeights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getOptimizedWeights:Boolean", "kind" : "def"}, {"label" : "optimizedWeights", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.boosting.GBMParams.optimizedWeights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#optimizedWeights:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationIndicatorCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.getValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getValidationIndicatorCol:String", "kind" : "final def"}, {"label" : "validationIndicatorCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.validationIndicatorCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#validationIndicatorCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMaxIter", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.getMaxIter", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getMaxIter:Int", "kind" : "final def"}, {"label" : "maxIter", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.maxIter", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#maxIter:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "probability2prediction", "tail" : "(probability: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.probability2prediction", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#probability2prediction(probability:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "predictProbability", "tail" : "(features: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.predictProbability", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#predictProbability(features:FeaturesType):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "raw2prediction", "tail" : "(rawPrediction: Vector): Double", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2prediction", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#raw2prediction(rawPrediction:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "raw2probability", "tail" : "(rawPrediction: Vector): Vector", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.raw2probability", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#raw2probability(rawPrediction:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transform", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setThresholds(value:Array[Double]):M", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.ProbabilisticClassificationModel.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setProbabilityCol(value:String):M", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.classification.ClassificationModel.predict", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#predict(features:FeaturesType):Double", "kind" : "def"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.classification.ClassificationModel.transformImpl", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "final def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.ClassificationModel.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setRawPredictionCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): GBMClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): GBMClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[GBMClassificationModel]): GBMClassificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[GBMClassificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GBMClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.load", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#load(path:String):org.apache.spark.ml.classification.GBMClassificationModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[GBMClassificationModel]", "member" : "org.apache.spark.ml.classification.GBMClassificationModel.read", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.GBMClassificationModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/GBMClassificationModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.GBMClassifier", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.GBMClassifier.write", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): GBMClassificationModel", "member" : "org.apache.spark.ml.classification.GBMClassifier.train", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.classification.GBMClassificationModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): GBMClassifier", "member" : "org.apache.spark.ml.classification.GBMClassifier.copy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.GBMClassifier", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.GBMClassifier#<init>", "error" : "unsupported entity"}, {"label" : "setSeed", "tail" : "(value: Long): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setSeed", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setSeed(value:Long):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setParallelism", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setParallelism", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setParallelism(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setCheckpointInterval", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setCheckpointInterval(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setNumRounds", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setNumRounds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setNumRounds(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setValidationTol", "tail" : "(value: Double): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setValidationTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setValidationTol(value:Double):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setValidationIndicatorCol", "tail" : "(value: String): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setValidationIndicatorCol(value:String):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setUpdates", "tail" : "(value: String): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setUpdates", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setUpdates(value:String):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setOptimizedWeights", "tail" : "(value: Boolean): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setOptimizedWeights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setOptimizedWeights(value:Boolean):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setTol", "tail" : "(value: Double): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setTol(value:Double):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setMaxIter", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setMaxIter", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setMaxIter(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setAggregationDepth", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setAggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setAggregationDepth(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setLearningRate", "tail" : "(value: Double): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setLearningRate", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setLearningRate(value:Double):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setLoss", "tail" : "(value: String): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setLoss", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setLoss(value:String):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setInitStrategy", "tail" : "(value: String): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setInitStrategy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setInitStrategy(value:String):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setSubspaceRatio", "tail" : "(value: Double): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setSubspaceRatio(value:Double):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setSubsampleRatio", "tail" : "(value: Double): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setSubsampleRatio(value:Double):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setReplacement", "tail" : "(value: Boolean): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setReplacement", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setReplacement(value:Boolean):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setNumBaseLearners", "tail" : "(value: Int): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setNumBaseLearners(value:Int):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setBaseLearner", "tail" : "(value: EnsembleRegressorType): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setBaseLearner(value:org.apache.spark.ml.ensemble.EnsembleRegressorType):GBMClassifier.this.type", "kind" : "def"}, {"label" : "setWeightCol", "tail" : "(value: String): GBMClassifier.this.type", "member" : "org.apache.spark.ml.classification.GBMClassifier.setWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setWeightCol(value:String):GBMClassifier.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.GBMClassifier#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.GBMClassifier.uid", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getLoss", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.getLoss", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getLoss:String", "kind" : "def"}, {"label" : "loss", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.loss", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#loss:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getInitStrategy", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.getInitStrategy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getInitStrategy:String", "kind" : "def"}, {"label" : "initStrategy", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.GBMClassifierParams.initStrategy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#initStrategy:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "getNumRounds", "tail" : "(): Int", "member" : "org.apache.spark.ml.boosting.GBMParams.getNumRounds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getNumRounds:Int", "kind" : "def"}, {"label" : "numRounds", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.boosting.GBMParams.numRounds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#numRounds:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getValidationTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getValidationTol:Double", "kind" : "final def"}, {"label" : "validationTol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.boosting.GBMParams.validationTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#validationTol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getLearningRate", "tail" : "(): Double", "member" : "org.apache.spark.ml.boosting.GBMParams.getLearningRate", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getLearningRate:Double", "kind" : "def"}, {"label" : "learningRate", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.boosting.GBMParams.learningRate", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#learningRate:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getUpdates", "tail" : "(): String", "member" : "org.apache.spark.ml.boosting.GBMParams.getUpdates", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getUpdates:String", "kind" : "def"}, {"label" : "updates", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.boosting.GBMParams.updates", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#updates:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "getOptimizedWeights", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.boosting.GBMParams.getOptimizedWeights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getOptimizedWeights:Boolean", "kind" : "def"}, {"label" : "optimizedWeights", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.boosting.GBMParams.optimizedWeights", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#optimizedWeights:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "slice", "tail" : "(indices: Array[Int]): (Vector) => Vector", "member" : "org.apache.spark.ml.ensemble.HasSubBag.slice", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#slice(indices:Array[Int]):org.apache.spark.ml.linalg.Vector=>org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "subspace", "tail" : "(subspaceRatio: Double, numFeatures: Int, seed: Long): Array[Int]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#subspace(subspaceRatio:Double,numFeatures:Int,seed:Long):Array[Int]", "kind" : "def"}, {"label" : "getSubspaceRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getSubspaceRatio:Double", "kind" : "def"}, {"label" : "subspaceRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subspaceRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#subspaceRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getSubsampleRatio", "tail" : "(): Double", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getSubsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getSubsampleRatio:Double", "kind" : "def"}, {"label" : "subsampleRatio", "tail" : ": Param[Double]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.subsampleRatio", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#subsampleRatio:org.apache.spark.ml.param.Param[Double]", "kind" : "val"}, {"label" : "getReplacement", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.ensemble.HasSubBag.getReplacement", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getReplacement:Boolean", "kind" : "def"}, {"label" : "replacement", "tail" : ": Param[Boolean]", "member" : "org.apache.spark.ml.ensemble.HasSubBag.replacement", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#replacement:org.apache.spark.ml.param.Param[Boolean]", "kind" : "val"}, {"label" : "getSeed", "tail" : "(): Long", "member" : "org.apache.spark.ml.param.shared.HasSeed.getSeed", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getSeed:Long", "kind" : "final def"}, {"label" : "seed", "tail" : ": LongParam", "member" : "org.apache.spark.ml.param.shared.HasSeed.seed", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#seed:org.apache.spark.ml.param.LongParam", "kind" : "final val"}, {"label" : "getAggregationDepth", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.getAggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getAggregationDepth:Int", "kind" : "final def"}, {"label" : "aggregationDepth", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasAggregationDepth.aggregationDepth", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#aggregationDepth:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "getCheckpointInterval", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.getCheckpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getCheckpointInterval:Int", "kind" : "final def"}, {"label" : "checkpointInterval", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasCheckpointInterval.checkpointInterval", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#checkpointInterval:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsembleRegressorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsembleRegressorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsembleRegressorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumBaseLearners", "tail" : "(): Int", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.getNumBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getNumBaseLearners:Int", "kind" : "def"}, {"label" : "numBaseLearners", "tail" : ": Param[Int]", "member" : "org.apache.spark.ml.ensemble.HasNumBaseLearners.numBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#numBaseLearners:org.apache.spark.ml.param.Param[Int]", "kind" : "val"}, {"label" : "getValidationIndicatorCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.getValidationIndicatorCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getValidationIndicatorCol:String", "kind" : "final def"}, {"label" : "validationIndicatorCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasValidationIndicatorCol.validationIndicatorCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#validationIndicatorCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getTol", "tail" : "(): Double", "member" : "org.apache.spark.ml.param.shared.HasTol.getTol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getTol:Double", "kind" : "final def"}, {"label" : "tol", "tail" : ": DoubleParam", "member" : "org.apache.spark.ml.param.shared.HasTol.tol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#tol:org.apache.spark.ml.param.DoubleParam", "kind" : "final val"}, {"label" : "getMaxIter", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.getMaxIter", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getMaxIter:Int", "kind" : "final def"}, {"label" : "maxIter", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasMaxIter.maxIter", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#maxIter:org.apache.spark.ml.param.IntParam", "kind" : "final val"}, {"label" : "setThresholds", "tail" : "(value: Array[Double]): GBMClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setThresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setThresholds(value:Array[Double]):E", "kind" : "def"}, {"label" : "setProbabilityCol", "tail" : "(value: String): GBMClassifier", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifier.setProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setProbabilityCol(value:String):E", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ProbabilisticClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getThresholds", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.param.shared.HasThresholds.getThresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getThresholds:Array[Double]", "kind" : "def"}, {"label" : "thresholds", "tail" : ": DoubleArrayParam", "member" : "org.apache.spark.ml.param.shared.HasThresholds.thresholds", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#thresholds:org.apache.spark.ml.param.DoubleArrayParam", "kind" : "val"}, {"label" : "getProbabilityCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.getProbabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getProbabilityCol:String", "kind" : "final def"}, {"label" : "probabilityCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasProbabilityCol.probabilityCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#probabilityCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getNumClasses", "tail" : "(dataset: Dataset[_], maxNumClasses: Int): Int", "member" : "org.apache.spark.ml.classification.Classifier.getNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getNumClasses(dataset:org.apache.spark.sql.Dataset[_],maxNumClasses:Int):Int", "kind" : "def"}, {"label" : "validateLabel", "tail" : "(label: Double, numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateLabel", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#validateLabel(label:Double,numClasses:Int):Unit", "kind" : "def"}, {"label" : "validateNumClasses", "tail" : "(numClasses: Int): Unit", "member" : "org.apache.spark.ml.classification.Classifier.validateNumClasses", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#validateNumClasses(numClasses:Int):Unit", "kind" : "def"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.classification.Classifier.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "setRawPredictionCol", "tail" : "(value: String): GBMClassifier", "member" : "org.apache.spark.ml.classification.Classifier.setRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setRawPredictionCol(value:String):E", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): GBMClassificationModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): GBMClassifier", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): GBMClassifier", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): GBMClassifier", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[GBMClassificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): GBMClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): GBMClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): GBMClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): GBMClassifier", "member" : "org.apache.spark.ml.classification.GBMClassifier.load", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#load(path:String):org.apache.spark.ml.classification.GBMClassifier", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[GBMClassifier]", "member" : "org.apache.spark.ml.classification.GBMClassifier.read", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.GBMClassifier]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/GBMClassifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/GBMClassifier.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.StackingClassificationModel", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.write", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): StackingClassificationModel", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.copy", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.StackingClassificationModel", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.StackingClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "predict", "tail" : "(features: Vector): Double", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.predict", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#predict(features:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.StackingClassificationModel#<init>", "error" : "unsupported entity"}, {"label" : "stack", "tail" : ": EnsemblePredictionModelType", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.stack", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#stack:org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "val"}, {"label" : "models", "tail" : ": Array[EnsemblePredictionModelType]", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.models", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#models:Array[org.apache.spark.ml.ensemble.EnsemblePredictionModelType]", "kind" : "val"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.uid", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getStackMethod", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.StackingClassifierParams.getStackMethod", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getStackMethod:String", "kind" : "def"}, {"label" : "stackMethod", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.StackingClassifierParams.stackMethod", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#stackMethod:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getBaseLearners", "tail" : "(): Array[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.getBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getBaseLearners:Array[L]", "kind" : "def"}, {"label" : "baseLearners", "tail" : ": Param[Array[EnsemblePredictorType]]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.baseLearners", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#baseLearners:org.apache.spark.ml.param.Param[Array[L]]", "kind" : "val"}, {"label" : "getStacker", "tail" : "(): EnsemblePredictorType", "member" : "org.apache.spark.ml.ensemble.HasStacker.getStacker", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getStacker:L", "kind" : "def"}, {"label" : "stacker", "tail" : ": Param[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasStacker.stacker", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#stacker:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsemblePredictorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsemblePredictorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "transformImpl", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transformImpl", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transformImpl(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_]): DataFrame", "member" : "org.apache.spark.ml.PredictionModel.transform", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.PredictionModel.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "featuresDataType", "tail" : "(): DataType", "member" : "org.apache.spark.ml.PredictionModel.featuresDataType", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#featuresDataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"label" : "numFeatures", "tail" : "(): Int", "member" : "org.apache.spark.ml.PredictionModel.numFeatures", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#numFeatures:Int", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): StackingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#setPredictionCol(value:String):M", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): StackingClassificationModel", "member" : "org.apache.spark.ml.PredictionModel.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#setFeaturesCol(value:String):M", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "hasParent", "tail" : "(): Boolean", "member" : "org.apache.spark.ml.Model.hasParent", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#hasParent:Boolean", "kind" : "def"}, {"label" : "setParent", "tail" : "(parent: Estimator[StackingClassificationModel]): StackingClassificationModel", "member" : "org.apache.spark.ml.Model.setParent", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#setParent(parent:org.apache.spark.ml.Estimator[M]):M", "kind" : "def"}, {"label" : "parent", "tail" : ": Estimator[StackingClassificationModel]", "member" : "org.apache.spark.ml.Model.parent", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#parent:org.apache.spark.ml.Estimator[M]", "kind" : "var"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transform", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): DataFrame", "member" : "org.apache.spark.ml.Transformer.transform", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transform(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): StackingClassificationModel.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): StackingClassificationModel", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.load", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#load(path:String):org.apache.spark.ml.classification.StackingClassificationModel", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[StackingClassificationModel]", "member" : "org.apache.spark.ml.classification.StackingClassificationModel.read", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.StackingClassificationModel]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/StackingClassificationModel.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.classification.StackingClassifier", "shortDescription" : "", "object" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html", "members_class" : [{"label" : "write", "tail" : "(): MLWriter", "member" : "org.apache.spark.ml.classification.StackingClassifier.write", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#write:org.apache.spark.ml.util.MLWriter", "kind" : "def"}, {"label" : "train", "tail" : "(dataset: Dataset[_]): StackingClassificationModel", "member" : "org.apache.spark.ml.classification.StackingClassifier.train", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#train(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.ml.classification.StackingClassificationModel", "kind" : "def"}, {"label" : "copy", "tail" : "(extra: ParamMap): StackingClassifier", "member" : "org.apache.spark.ml.classification.StackingClassifier.copy", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#copy(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.classification.StackingClassifier", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.StackingClassifier#<init>", "error" : "unsupported entity"}, {"label" : "setParallelism", "tail" : "(value: Int): StackingClassifier.this.type", "member" : "org.apache.spark.ml.classification.StackingClassifier.setParallelism", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setParallelism(value:Int):StackingClassifier.this.type", "kind" : "def"}, {"label" : "setStackMethod", "tail" : "(value: String): StackingClassifier.this.type", "member" : "org.apache.spark.ml.classification.StackingClassifier.setStackMethod", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setStackMethod(value:String):StackingClassifier.this.type", "kind" : "def"}, {"label" : "setStacker", "tail" : "(value: EnsemblePredictorType): StackingClassifier.this.type", "member" : "org.apache.spark.ml.classification.StackingClassifier.setStacker", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setStacker(value:org.apache.spark.ml.ensemble.EnsemblePredictorType):StackingClassifier.this.type", "kind" : "def"}, {"label" : "setBaseLearners", "tail" : "(value: Array[EnsemblePredictorType]): StackingClassifier.this.type", "member" : "org.apache.spark.ml.classification.StackingClassifier.setBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setBaseLearners(value:Array[org.apache.spark.ml.ensemble.EnsemblePredictorType]):StackingClassifier.this.type", "kind" : "def"}, {"member" : "org.apache.spark.ml.classification.StackingClassifier#<init>", "error" : "unsupported entity"}, {"label" : "uid", "tail" : ": String", "member" : "org.apache.spark.ml.classification.StackingClassifier.uid", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#uid:String", "kind" : "val"}, {"label" : "save", "tail" : "(path: String): Unit", "member" : "org.apache.spark.ml.util.MLWritable.save", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#save(path:String):Unit", "kind" : "def"}, {"label" : "getStackMethod", "tail" : "(): String", "member" : "org.apache.spark.ml.classification.StackingClassifierParams.getStackMethod", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getStackMethod:String", "kind" : "def"}, {"label" : "stackMethod", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.classification.StackingClassifierParams.stackMethod", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#stackMethod:org.apache.spark.ml.param.Param[String]", "kind" : "val"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], numClasses: Int): RDD[Instance]", "member" : "org.apache.spark.ml.classification.ClassifierParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],numClasses:Int):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "validateAndTransformSchema", "tail" : "(schema: StructType, fitting: Boolean, featuresDataType: DataType): StructType", "member" : "org.apache.spark.ml.classification.ClassifierParams.validateAndTransformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#validateAndTransformSchema(schema:org.apache.spark.sql.types.StructType,fitting:Boolean,featuresDataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getRawPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.getRawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getRawPredictionCol:String", "kind" : "final def"}, {"label" : "rawPredictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasRawPredictionCol.rawPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#rawPredictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getBaseLearners", "tail" : "(): Array[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.getBaseLearners", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getBaseLearners:Array[L]", "kind" : "def"}, {"label" : "baseLearners", "tail" : ": Param[Array[EnsemblePredictorType]]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearners.baseLearners", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#baseLearners:org.apache.spark.ml.param.Param[Array[L]]", "kind" : "val"}, {"label" : "getStacker", "tail" : "(): EnsemblePredictorType", "member" : "org.apache.spark.ml.ensemble.HasStacker.getStacker", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getStacker:L", "kind" : "def"}, {"label" : "stacker", "tail" : ": Param[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasStacker.stacker", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#stacker:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "fitBaseLearner", "tail" : "(baseLearner: EnsemblePredictorType, labelColName: String, featuresColName: String, predictionColName: String, weightColName: Option[String])(df: DataFrame): EnsemblePredictionModelType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.fitBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#fitBaseLearner(baseLearner:L,labelColName:String,featuresColName:String,predictionColName:String,weightColName:Option[String])(df:org.apache.spark.sql.DataFrame):org.apache.spark.ml.ensemble.EnsemblePredictionModelType", "kind" : "def"}, {"label" : "getBaseLearner", "tail" : "(): EnsemblePredictorType", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.getBaseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getBaseLearner:L", "kind" : "def"}, {"label" : "baseLearner", "tail" : ": Param[EnsemblePredictorType]", "member" : "org.apache.spark.ml.ensemble.HasBaseLearner.baseLearner", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#baseLearner:org.apache.spark.ml.param.Param[L]", "kind" : "val"}, {"label" : "getWeightCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.getWeightCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getWeightCol:String", "kind" : "final def"}, {"label" : "weightCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasWeightCol.weightCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#weightCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getParallelism", "tail" : "(): Int", "member" : "org.apache.spark.ml.param.shared.HasParallelism.getParallelism", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getParallelism:Int", "kind" : "def"}, {"label" : "parallelism", "tail" : ": IntParam", "member" : "org.apache.spark.ml.param.shared.HasParallelism.parallelism", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#parallelism:org.apache.spark.ml.param.IntParam", "kind" : "val"}, {"label" : "extractLabeledPoints", "tail" : "(dataset: Dataset[_]): RDD[LabeledPoint]", "member" : "org.apache.spark.ml.Predictor.extractLabeledPoints", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractLabeledPoints(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.LabeledPoint]", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType): StructType", "member" : "org.apache.spark.ml.Predictor.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_]): StackingClassificationModel", "member" : "org.apache.spark.ml.Predictor.fit", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_]):M", "kind" : "def"}, {"label" : "setPredictionCol", "tail" : "(value: String): StackingClassifier", "member" : "org.apache.spark.ml.Predictor.setPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setPredictionCol(value:String):Learner", "kind" : "def"}, {"label" : "setFeaturesCol", "tail" : "(value: String): StackingClassifier", "member" : "org.apache.spark.ml.Predictor.setFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setFeaturesCol(value:String):Learner", "kind" : "def"}, {"label" : "setLabelCol", "tail" : "(value: String): StackingClassifier", "member" : "org.apache.spark.ml.Predictor.setLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setLabelCol(value:String):Learner", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_], validateInstance: (Instance) => Unit): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_],validateInstance:org.apache.spark.ml.feature.Instance=>Unit):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "extractInstances", "tail" : "(dataset: Dataset[_]): RDD[Instance]", "member" : "org.apache.spark.ml.PredictorParams.extractInstances", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractInstances(dataset:org.apache.spark.sql.Dataset[_]):org.apache.spark.rdd.RDD[org.apache.spark.ml.feature.Instance]", "kind" : "def"}, {"label" : "getPredictionCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.getPredictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getPredictionCol:String", "kind" : "final def"}, {"label" : "predictionCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasPredictionCol.predictionCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#predictionCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getFeaturesCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.getFeaturesCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getFeaturesCol:String", "kind" : "final def"}, {"label" : "featuresCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasFeaturesCol.featuresCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#featuresCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "getLabelCol", "tail" : "(): String", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.getLabelCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getLabelCol:String", "kind" : "final def"}, {"label" : "labelCol", "tail" : ": Param[String]", "member" : "org.apache.spark.ml.param.shared.HasLabelCol.labelCol", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#labelCol:org.apache.spark.ml.param.Param[String]", "kind" : "final val"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMaps: Seq[ParamMap]): Seq[StackingClassificationModel]", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMaps:Seq[org.apache.spark.ml.param.ParamMap]):Seq[M]", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], paramMap: ParamMap): StackingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],paramMap:org.apache.spark.ml.param.ParamMap):M", "kind" : "def"}, {"label" : "fit", "tail" : "(dataset: Dataset[_], firstParamPair: ParamPair[_], otherParamPairs: ParamPair[_]*): StackingClassificationModel", "member" : "org.apache.spark.ml.Estimator.fit", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#fit(dataset:org.apache.spark.sql.Dataset[_],firstParamPair:org.apache.spark.ml.param.ParamPair[_],otherParamPairs:org.apache.spark.ml.param.ParamPair[_]*):M", "kind" : "def"}, {"label" : "transformSchema", "tail" : "(schema: StructType, logging: Boolean): StructType", "member" : "org.apache.spark.ml.PipelineStage.transformSchema", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#transformSchema(schema:org.apache.spark.sql.types.StructType,logging:Boolean):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: => String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#logName:String", "kind" : "def"}, {"label" : "copyValues", "tail" : "(to: T, extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.copyValues", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#copyValues[T<:org.apache.spark.ml.param.Params](to:T,extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "def"}, {"label" : "extractParamMap", "tail" : "(): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractParamMap():org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "extractParamMap", "tail" : "(extra: ParamMap): ParamMap", "member" : "org.apache.spark.ml.param.Params.extractParamMap", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#extractParamMap(extra:org.apache.spark.ml.param.ParamMap):org.apache.spark.ml.param.ParamMap", "kind" : "final def"}, {"label" : "defaultCopy", "tail" : "(extra: ParamMap): T", "member" : "org.apache.spark.ml.param.Params.defaultCopy", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#defaultCopy[T<:org.apache.spark.ml.param.Params](extra:org.apache.spark.ml.param.ParamMap):T", "kind" : "final def"}, {"label" : "hasDefault", "tail" : "(param: Param[T]): Boolean", "member" : "org.apache.spark.ml.param.Params.hasDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#hasDefault[T](param:org.apache.spark.ml.param.Param[T]):Boolean", "kind" : "final def"}, {"label" : "getDefault", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.getDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getDefault[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(paramPairs: ParamPair[_]*): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setDefault(paramPairs:org.apache.spark.ml.param.ParamPair[_]*):Params.this.type", "kind" : "final def"}, {"label" : "setDefault", "tail" : "(param: Param[T], value: T): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.setDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#setDefault[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "$", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.$", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#$[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "getOrDefault", "tail" : "(param: Param[T]): T", "member" : "org.apache.spark.ml.param.Params.getOrDefault", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getOrDefault[T](param:org.apache.spark.ml.param.Param[T]):T", "kind" : "final def"}, {"label" : "clear", "tail" : "(param: Param[_]): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.clear", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#clear(param:org.apache.spark.ml.param.Param[_]):Params.this.type", "kind" : "final def"}, {"label" : "get", "tail" : "(param: Param[T]): Option[T]", "member" : "org.apache.spark.ml.param.Params.get", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#get[T](param:org.apache.spark.ml.param.Param[T]):Option[T]", "kind" : "final def"}, {"label" : "set", "tail" : "(paramPair: ParamPair[_]): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#set(paramPair:org.apache.spark.ml.param.ParamPair[_]):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: String, value: Any): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#set(param:String,value:Any):Params.this.type", "kind" : "final def"}, {"label" : "set", "tail" : "(param: Param[T], value: T): StackingClassifier.this.type", "member" : "org.apache.spark.ml.param.Params.set", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#set[T](param:org.apache.spark.ml.param.Param[T],value:T):Params.this.type", "kind" : "final def"}, {"label" : "getParam", "tail" : "(paramName: String): Param[Any]", "member" : "org.apache.spark.ml.param.Params.getParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getParam(paramName:String):org.apache.spark.ml.param.Param[Any]", "kind" : "def"}, {"label" : "hasParam", "tail" : "(paramName: String): Boolean", "member" : "org.apache.spark.ml.param.Params.hasParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#hasParam(paramName:String):Boolean", "kind" : "def"}, {"label" : "isDefined", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isDefined", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#isDefined(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "isSet", "tail" : "(param: Param[_]): Boolean", "member" : "org.apache.spark.ml.param.Params.isSet", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#isSet(param:org.apache.spark.ml.param.Param[_]):Boolean", "kind" : "final def"}, {"label" : "explainParams", "tail" : "(): String", "member" : "org.apache.spark.ml.param.Params.explainParams", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#explainParams():String", "kind" : "def"}, {"label" : "explainParam", "tail" : "(param: Param[_]): String", "member" : "org.apache.spark.ml.param.Params.explainParam", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#explainParam(param:org.apache.spark.ml.param.Param[_]):String", "kind" : "def"}, {"label" : "params", "tail" : ": Array[Param[_]]", "member" : "org.apache.spark.ml.param.Params.params", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#params:Array[org.apache.spark.ml.param.Param[_]]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.util.Identifiable.toString", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "load", "tail" : "(path: String): StackingClassifier", "member" : "org.apache.spark.ml.classification.StackingClassifier.load", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#load(path:String):org.apache.spark.ml.classification.StackingClassifier", "kind" : "def"}, {"label" : "read", "tail" : "(): MLReader[StackingClassifier]", "member" : "org.apache.spark.ml.classification.StackingClassifier.read", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#read:org.apache.spark.ml.util.MLReader[org.apache.spark.ml.classification.StackingClassifier]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/classification\/StackingClassifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/classification\/StackingClassifier.html", "kind" : "class"}], "org" : []};